diff -rupN a/include/openssl/ssl.h b/include/openssl/ssl.h
--- a/include/openssl/ssl.h	2017-02-15 09:25:59.987475000 +1030
+++ b/include/openssl/ssl.h	2017-02-15 09:55:29.163424944 +1030
@@ -980,6 +980,12 @@ OPENSSL_EXPORT int SSL_CTX_use_certifica
 OPENSSL_EXPORT int SSL_use_certificate_ASN1(SSL *ssl, const uint8_t *der,
                                             size_t der_len);
 
+OPENSSL_EXPORT int SSL_CTX_add_chain_cert_ASN1(SSL_CTX *ctx,
+                                               const uint8_t *der,
+                                               size_t der_len);
+OPENSSL_EXPORT int SSL_add_chain_cert_ASN1(SSL *ssl, const uint8_t *der,
+                                           size_t der_len);
+
 OPENSSL_EXPORT int SSL_CTX_use_PrivateKey_ASN1(int pk, SSL_CTX *ctx,
                                                const uint8_t *der,
                                                size_t der_len);
diff -rupN a/ssl/ssl_x509.c b/ssl/ssl_x509.c
--- a/ssl/ssl_x509.c	2017-02-15 09:25:59.995475000 +1030
+++ b/ssl/ssl_x509.c	2017-02-15 10:00:49.243415733 +1030
@@ -577,14 +577,9 @@ static int ssl_cert_set1_chain(CERT *cer
   return 1;
 }
 
-static int ssl_cert_append_cert(CERT *cert, X509 *x509) {
+static int ssl_cert_append_cert(CERT *cert, CRYPTO_BUFFER *buffer) {
   assert(cert->x509_method);
 
-  CRYPTO_BUFFER *buffer = x509_to_buffer(x509);
-  if (buffer == NULL) {
-    return 0;
-  }
-
   if (cert->chain != NULL) {
     if (!sk_CRYPTO_BUFFER_push(cert->chain, buffer)) {
       CRYPTO_BUFFER_free(buffer);
@@ -607,7 +602,14 @@ static int ssl_cert_append_cert(CERT *ce
 }
 
 static int ssl_cert_add0_chain_cert(CERT *cert, X509 *x509) {
-  if (!ssl_cert_append_cert(cert, x509)) {
+  CRYPTO_BUFFER *buffer = x509_to_buffer(x509);
+  if (buffer == NULL) {
+    return 0;
+  }
+
+  const int ok = ssl_cert_append_cert(cert, buffer);
+  CRYPTO_BUFFER_free(buffer);
+  if (!ok) {
     return 0;
   }
 
@@ -618,7 +620,31 @@ static int ssl_cert_add0_chain_cert(CERT
 }
 
 static int ssl_cert_add1_chain_cert(CERT *cert, X509 *x509) {
-  if (!ssl_cert_append_cert(cert, x509)) {
+  CRYPTO_BUFFER *buffer = x509_to_buffer(x509);
+  if (buffer == NULL) {
+    return 0;
+  }
+
+  const int ok = ssl_cert_append_cert(cert, buffer);
+  CRYPTO_BUFFER_free(buffer);
+  if (!ok) {
+    return 0;
+  }
+
+  ssl_crypto_x509_flush_cached_chain(cert);
+  return 1;
+}
+
+static int ssl_cert_add_chain_cert_asn1(CERT *cert, const uint8_t *der,
+                                        size_t der_len) {
+  CRYPTO_BUFFER *buffer = CRYPTO_BUFFER_new(der, der_len, NULL);
+  if (buffer == NULL) {
+    return 0;
+  }
+
+  const int ok = ssl_cert_append_cert(cert, buffer);
+  CRYPTO_BUFFER_free(buffer);
+  if (!ok) {
     return 0;
   }
 
@@ -662,6 +688,15 @@ int SSL_add1_chain_cert(SSL *ssl, X509 *
   return ssl_cert_add1_chain_cert(ssl->cert, x509);
 }
 
+int SSL_CTX_add_chain_cert_ASN1(SSL_CTX *ctx, const uint8_t *der,
+                                size_t der_len) {
+  return ssl_cert_add_chain_cert_asn1(ctx->cert, der, der_len);
+}
+
+int SSL_add_chain_cert_ASN1(SSL *ssl, const uint8_t *der, size_t der_len) {
+  return ssl_cert_add_chain_cert_asn1(ssl->cert, der, der_len);
+}
+
 int SSL_CTX_clear_chain_certs(SSL_CTX *ctx) {
   return SSL_CTX_set0_chain(ctx, NULL);
 }
